@font-face{font-family:"Montserrat";font-style:normal;font-weight:400;src:url(../fonts/montserrat.woff2) format("woff2"),url(../fonts/montserrat.woff) format("woff");font-display:swap}@font-face{font-family:"Montserrat";font-style:normal;font-weight:700;src:url(../fonts/montserratbold.woff2) format("woff2"),url(../fonts/montserratbold.woff) format("woff");font-display:swap}.visually-hidden{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;white-space:nowrap;border:0;clip:rect(0 0 0 0);-webkit-clip-path:inset(100%);clip-path:inset(100%)}.header p,.title{text-transform:uppercase}.header p{font-weight:500;line-height:5px;letter-spacing:0}.header a{color:#f3f3f3;text-decoration:none;font-size:18px;font-weight:700;line-height:27px;letter-spacing:0;text-align:left;grid-column:2/3}.header small{font-size:12px;font-weight:400;line-height:18px;grid-column:2/3}.header{width:100%;max-width:1920px}.header__wrapper{padding:0 calc(50vw - 590px);display:grid;gap:45px;grid-template-columns:auto 1fr;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__contacts,.header__user{list-style:none;margin:0;padding:0;gap:31px}.header__user{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__contacts{display:grid;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:end;grid-template-columns:repeat(2,-webkit-max-content);grid-template-columns:repeat(2,max-content)}.header__mail,.header__phone{letter-spacing:0;text-align:left;position:relative;display:grid;grid-template-columns:auto 1fr}.header__mail{font-size:12px;font-weight:400;line-height:18px;grid-template-rows:1fr}.header__phone{font-size:18px;font-weight:700;line-height:27px;grid-template-rows:repeat(2,1fr)}.header__mail::before,.header__phone::before{content:"";float:left;justify-items:center;-ms-flex-item-align:center;align-self:center}.header__mail::before{background:url(../../img/icon-letter.svg) no-repeat;width:15px;height:12px;margin-right:13px}.header__phone::before{background:url(../../img/icon-phone.svg) no-repeat;width:16px;height:16px;margin-right:15px}*{-webkit-box-sizing:border-box;box-sizing:border-box}body{font:400 21px/30px "Montserrat",Arial,sans-serif;background:#0e0e0e;color:#f3f3f3}@supports (-webkit-appearance:none){.header__mail::before{background-image:url(../../img/icon-letter.svg)}.header__phone::before{background-image:url(../../img/icon-phone.svg)}}@media (max-width:1279px){.header__wrapper{padding:0 calc(50vw - 462px)}}@media (max-width:1023px){.header__wrapper{padding:0 calc(50vw - 364px)}}@media (max-width:767px){.header__wrapper{padding:0 15px;justify-items:center}.header__contacts,.header__wrapper{grid-template-columns:1fr}}@media (max-width:700px){.title{text-align:center}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */